{"version":3,"sources":["Services/Reducers/Reducer.js","Services/Reducers/RootReducer.js","Store/Store.js","Components/Header.js","Services/Actions/Actions.js","Components/Home.js","App.js","index.js"],"names":["initialState","countHandler","state","arguments","length","undefined","type","rootReducer","combineReducers","store","configureStore","reducer","Header","myState","useSelector","_jsxs","_Fragment","children","_jsx","increment","decrement","Home","dispatch","useDispatch","onClick","App","className","subscribe","console","log","getState","rootElement","document","getElementById","createRoot","render","StrictMode","Provider"],"mappings":"uLAAMA,EAAe,EAWNC,EAVM,WAAmC,IAAlCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGH,EAC5B,QADgDG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACjCC,MACb,IAAK,YACH,OAAOJ,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,QACE,OAAOA,EAEb,E,OCLeK,EAFKC,YAAgB,CAAEP,iBCCvBQ,EADDC,YAAe,CAAEC,QAAS,CAAEJ,iB,OCQ3BK,MATf,WACE,IAAMC,EAAUC,aAAY,SAACZ,GAAK,OAAKA,EAAMK,YAAYN,YAAY,IACrE,OACEc,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,oBACJC,cAAA,KAAAD,SAAIJ,MAGV,ECVMM,EAAY,WAChB,MAAO,CACLb,KAAM,YAEV,EAEMc,EAAY,WAChB,MAAO,CACLd,KAAM,YAEV,ECEee,MAVf,WACE,IAAMC,EAAWC,cACjB,OACER,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,mBACJC,cAAA,UAAQM,QAAS,kBAAMF,EAASH,IAAY,EAACF,SAAC,cAC9CC,cAAA,UAAQM,QAAS,kBAAMF,EAASF,IAAY,EAACH,SAAC,gBAGpD,E,MCPe,SAASQ,IACtB,OACEV,eAAA,OAAKW,UAAU,MAAKT,SAAA,CAClBC,cAACN,EAAM,IACPM,cAACG,EAAI,MAGX,CCLAZ,EAAMkB,WAAU,kBAAMC,QAAQC,IAAIpB,EAAMqB,WAAW,IACnD,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACHjB,cAACkB,aAAU,CAAAnB,SACTC,cAACmB,IAAQ,CAAC5B,MAAOA,EAAMQ,SACrBC,cAACO,EAAG,Q","file":"static/js/main.b72248ff.chunk.js","sourcesContent":["const initialState = 0;\r\nconst countHandler = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default countHandler;\r\n","import countHandler from \"./Reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({ countHandler });\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"../Services/Reducers/RootReducer\";\r\n\r\nconst store = configureStore({ reducer: { rootReducer } });\r\nexport default store;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nfunction Header() {\r\n  const myState = useSelector((state) => state.rootReducer.countHandler);\r\n  return (\r\n    <>\r\n      <h1>Inc/Dec Counter</h1>\r\n      <p>{myState}</p>\r\n    </>\r\n  );\r\n}\r\nexport default Header;\r\n","const increment = () => {\r\n  return {\r\n    type: \"INCREMENT\"\r\n  };\r\n};\r\n\r\nconst decrement = () => {\r\n  return {\r\n    type: \"DECREMENT\"\r\n  };\r\n};\r\nexport { increment, decrement };\r\n","import { increment, decrement } from \"../Services/Actions/Actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <h1>Home Component</h1>\r\n      <button onClick={() => dispatch(increment())}>Increment</button>\r\n      <button onClick={() => dispatch(decrement())}>Decrement</button>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","import Header from \"./Components/Header\";\nimport Home from \"./Components/Home\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/Store\";\nimport App from \"./App\";\n\nstore.subscribe(() => console.log(store.getState()));\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}